_recordDemo1 input parameter list [record #book d5cc34, record #book d2cd] output parameter list[record #book d3];
record #new
type int : value;
type real: cost; endrecord;
d3<--- d5cc34 + d2cd;
return [d3]; end
_main
record #book
type int : edition;
type real: price; endrecord;
type record #book b2; type record #book c2; type record #book d2; type record #new b7bc34; b2.edition <--- 3;
b2.price <--- 24.95;
c2.edition <--- 2;
c2.price <--- 98.80;
% following is a valid statement as the types of d2, b2 and c2 are same d2<--- b2+ c2;
% Note that d2<--- b2 + b7bc34; is not type correct as the language follows name equivalence. % Note that the types of b2 and b7bc34 are not same.
% CRAZY
[d2]<--- call _recordDemo1 with parameters[b2,c2];
write(d2);
end

_function1
input parameter list [int c2, int d2cd]
output parameter list [int b5d, int d3]; b5d<---c2+234-d2cd;
d3<---b5d+20;
return [b5d, d3]; end
_main
type int: b4d333;
type int : c3ddd34; type int:c2d3; type int c2d4;
read(b4d333); read(c3ddd34);
[c2d3, c2d4]<--- call _function1 with parameters [b4d333, c3ddd34]; write(c2d3); write(c2d4);
end


% Program1.txt
_statistics input parameter list [int c2dbc,int d7,int b2d567] output parameter list [real d2, real c3bcd];
type real: c3 : global; c3 <---3;
d2 <--- (c2dbc + d7 + b2d567)/c3; c3bcd <--- d2*3.23;
return [d2,c3bcd];
end

type real : d3cd6 ;
[c4, d3cd6] <--- call _statistics with parameters [2,3,5];


record #finance
type int: value;
type real:rate;
type int: interest; endrecord

type record #finance : d5; type record #finance : c4; type record #finance : c3; c3 <--- c4 + d5;


union #student
type int: rollno;
type real:marks;
type int: age; endunion

definetype union #student as #newname; record #taggedunionexample
type int: tagvalue;
type newname: field; endrecord

%PANDY

b7bc34.tagvalue <--- 1;
b7bc34. field.rollno <--- 23;
write(b7bc34. field.rollno); % No type error
write(b7bc34. field.marks); % Compiler reports the type error â€“ dynamic type checking b7bc34.tagvalue = 2;
b7bc34. field.marks <--- 97.51;
b7bc34.tagvalue <--- 3;
b7bc34. field.age <--- 21;

definetype union #student as #newname;
definetype record #book as #newbook;
% CRAZY CRAZY
end